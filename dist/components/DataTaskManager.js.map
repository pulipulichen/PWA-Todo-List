{"version":3,"sources":["webpack:///./src/components/DataTaskManager/DataTaskManager.yaml","webpack:///./src/components/DataTaskManager/DataTaskManager.html?601e","webpack:///./src/components/DataTaskManager/DataTaskManager.html","webpack:///./src/components/DataTaskManager/DataTaskManager.js","webpack:///./src/components/DataTaskManager/DataTaskManager.js?e4b7","webpack:///./src/components/DataTaskManager/DataTaskManager.vue","webpack:///./src/components/DataTaskManager/DataTaskManager.yaml?0d99","webpack:///./src/components/DataTaskManager/DataTaskManagerMethods.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA,kCAAkC,MAAM,8BAA8B,UAAU,uBAAuB;AACvG;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,qBAAqB,iCAAiC;AACtD;AACA;AACA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA,gBAAgB;AAChB,W;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,cAAc;AACd;AACA;AACA,GAAG;AACH;AACA;;AAEiE;AACjE,0EAAsB;;AAEP,kE;;;;;;;;;;;;ACvBf;AAAA;AAAA,wCAAkE,CAAgB,mJAAG,EAAC,C;;;;;;;;;;;;ACAtF;AAAA;AAAA;AAAA;AAAA;AAA+F;AAC7B;AACL;;;AAG7D;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,2FAAM;AACR,EAAE,oGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACyK;AACzK,WAAW,0LAAM,iBAAiB,kMAAM;;AAExC;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;AC1Cf;AAAA;AAAA;AAAA;AAAqO,CAAgB,0SAAG,EAAC,C;;;;;;;;;;;;ACAzP;AAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,sBAAsB,eAAe;AACrC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA,sBAAsB,eAAe;AACrC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,C","file":"components/DataTaskManager.js","sourcesContent":["module.exports = function (Component) {\n  Component.options.__i18n = Component.options.__i18n || []\n  Component.options.__i18n.push('{\"en\":{\"TEST_MESSAGE\":\"Test Message\"},\"zh-TW\":{\"TEST_MESSAGE\":\"測試訊息\"}}')\n  delete Component.options._Ctor\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"span\", { staticClass: \"DataTaskManager\" })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./DataTaskManager.html?vue&type=template&id=5dc6fc0d&\"","let app = {\r\n  props: ['db'],\r\n  components: {},\r\n  data () {    \r\n    this.$i18n.locale = this.db.localConfig.locale\r\n    return {\r\n    }\r\n  },\r\n  watch: {\r\n    'db.localConfig.locale'() {\r\n      this.$i18n.locale = this.db.localConfig.locale;\r\n    },\r\n  },\r\n  computed: {},\r\n  mounted() {\r\n    this.initTaskUtils()\r\n  },\r\n  methods: {}\r\n}\r\n\r\nimport DataTaskManagerMethods from './DataTaskManagerMethods.js';\r\nDataTaskManagerMethods(app)\r\n\r\nexport default app","import mod from \"-!./DataTaskManager.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!./DataTaskManager.js?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataTaskManager.html?vue&type=template&id=5dc6fc0d&\"\nimport script from \"./DataTaskManager.js?vue&type=script&lang=js&\"\nexport * from \"./DataTaskManager.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./DataTaskManager.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FDataTaskManager%2FDataTaskManager.vue&lang=yaml\"\nif (typeof block0 === 'function') block0(component)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/app/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5dc6fc0d')) {\n      api.createRecord('5dc6fc0d', component.options)\n    } else {\n      api.reload('5dc6fc0d', component.options)\n    }\n    module.hot.accept(\"./DataTaskManager.html?vue&type=template&id=5dc6fc0d&\", function () {\n      api.rerender('5dc6fc0d', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/DataTaskManager/DataTaskManager.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./DataTaskManager.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FDataTaskManager%2FDataTaskManager.vue&lang=yaml\"; export default mod; export * from \"-!../../../node_modules/@kazupon/vue-i18n-loader/lib/index.js!./DataTaskManager.yaml?vue&type=custom&index=0&blockType=i18n&issuerPath=%2Fapp%2Fsrc%2Fcomponents%2FDataTaskManager%2FDataTaskManager.vue&lang=yaml\"","export default function (app) {\n\n  if (!app.methods) {\n    app.methods = {}\n  }\n\n  app.methods.initTaskUtils = function () {\n    this.db.task = {\n      buildTaskData: () => {\n        return this.buildTaskData()\n      },\n      addTaskByFiles: (files) => {\n        this.addTaskByFiles(files)\n      },\n      addFilesToTask: (task, files) => {\n        this.addFilesToTask(task, files)\n      }\n    }\n  }\n  \n  app.methods.addTaskByFiles = async function (files) {\n    if (files.length === 0) {\n      return false\n    }\n\n    let taskData = this.buildTaskData()\n\n    let filenames = []\n    for (let i = 0; i < files.length; i++) {\n      let file = files[i]\n      let filename = file.name\n      \n      // ---------------------------------\n      // 建立task\n      \n      filenames.push(filename)\n\n      // ---------------------------------\n      //上傳檔案\n\n      // console.log({file, filename})\n      let filePath = taskData.id + '/' + filename\n      let url = await this.db.utils.FileSystemUtils.writeFile(filePath, file)\n      // console.log(url, filePath)\n\n      let urlFilename = this.db.utils.FileSystemUtils.basename(url)\n\n      taskData.files.unshift(urlFilename)\n    }\n\n    taskData.title = filenames.join(', ')\n\n    this.db.localConfig.tasks.unshift(taskData)\n    this.db.config.view = 'todo'\n    this.db.config.focusedTask = taskData\n  }\n\n  app.methods.addFilesToTask = async function (task, files) {\n    for (let i = 0; i < files.length; i++) {\n      let file = files[i]\n      let filename = file.name\n      \n      // console.log({file, filename})\n      let filePath = task.id + '/' + filename\n      let url = await this.db.utils.FileSystemUtils.writeFile(filePath, file)\n      // console.log(url, filePath)\n\n      let urlFilename = this.db.utils.FileSystemUtils.basename(url)\n\n      task.files.unshift(urlFilename)\n    }\n  }\n  app.methods.buildTaskData = function () {\n    let addTodoText = this.db.config.addTodoText\n    this.db.config.addTodoText = ''\n\n    let time = (new Date()).getTime()\n    let task = {\n      id: this.db.localConfig.taskCount,\n      title: addTodoText,\n      description: ``,\n      location: ``,\n      dueTime: false,\n      priority: 0,\n      isCompleted: false,\n      isPinned: false,\n      createTime: time,\n      modifiedTime: time,\n      files: []\n    }\n\n    this.db.localConfig.taskCount++\n\n    return task\n  }\n\n  app.methods.cleanTask = function (task) {\n    console.log('@TODO cleanTask')\n  }\n\n}"],"sourceRoot":""}